# -*- coding: utf-8 -*-
"""Perceptron.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1vyZTvlTnVnwHaNUC0aT53hdAjD1TMUGF
"""



"""# New Section"""

from google.colab import files

uploaded = files.upload()

for fn in uploaded.keys():
  print('User uploaded file "{name}" with length {length} bytes'.format(
      name=fn, length=len(uploaded[fn])))

from google.colab import files

uploaded = files.upload()

for fn in uploaded.keys():
  print('User uploaded file "{name}" with length {length} bytes'.format(
      name=fn, length=len(uploaded[fn])))

import numpy as np
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split

f1 = open("data.txt", "r")
f2 = open("labels.txt", "r")


label=f2.readlines()
labels1=[]
for i in range(0,len(label)):
    labels1.append(int(label[i]))

l3=f1.readlines()
count1=len(l3)
data11=[]
count=0;

for i in range(len(l3)):
    l1 = l3[i].split()
    count=len(l1)
    data11.append(l1)



for i in range(count1):
    for j in range(count):
        data11[i][j]=int(data11[i][j])

X_train, X_test, y_train, y_test = train_test_split(data11, labels1, test_size=0.5)

data1=X_train;
labels=y_train

weight=np.zeros((count1,count),dtype=np.int16)

act=[]
for i in range(10):
    act.append(int(0))
train=[]
test=[]
x1 = np.zeros(100) 
y1 = np.zeros(100)
x2 = np.zeros(100) 
y2 = np.zeros(100)

#----------------------------------------------------Training-------------------------------------------------------------------------------------------------
index=0
for z in range(100):
    acc=0
    for i in range (5000):
        for j in range (count):
            for k in range(10):
                act[k]=act[k]+weight[k][j]*data1[i][j]

        index=act.index(max(act))
        for k in range(10):
            act[k] = 0;
        k=labels[i]
        if (index)!=labels[i]:
            acc=acc+1
            for j in range (count):
                weight[index][j]=int(weight[index][j])-int(data1[i][j])
                weight[labels[i]][j]=weight[labels[i]][j]+int(data1[i][j])

    print("this is train accuracy",( 5000-acc))
    train.append((5000-acc))
    x2[z]=z
    y2[z]=((5000-acc)/5000.0)*100
#-------------------------------------test-------------------------------------------------------------------------------------------------------------------------
    accurate=0
    data1=X_test
    labels=y_test
    for i in range (5000):
        for j in range (count):
            for k in range(10):
                act[k]=act[k]+weight[k][j]*data1[i][j]

        index=act.index(max(act))
        for k in range(10):
            act[k] = 0;
        if index == labels[i]:
            accurate=accurate+1

    print("this is test accuracy",( accurate))
    test.append(accurate)
    x1[z]=z
    y1[z]=(accurate/5000.0)*100
    plt.plot(x2, y2, label = "train")
    plt.plot(x1, y1, label = "test")
    plt.xlabel('Accuracy') 
    plt.ylabel('Iterations') 
    plt.show()

print (train)
print (test)